name: Deploy Jekyll site to Pages

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

on:
  push:
    branches:
      - master

env:
  RUBY_VERSION: 3.2

# Define a job named `build-and-publish` in your workflow.
jobs:
  build:
    runs-on: ubuntu-latest # This job uses a GitHub-hosted runner.

    # env:
    #   BUNDLE_PATH: "vendor/bundle"
    #   BUNDLE_JOBS: 4
    #   BUNDLE_RETRY: 3

    # Skip builds with "[ci skip]" in the commit
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Clone target branch
        run: |
          REMOTE_BRANCH="${REMOTE_BRANCH:-gh-pages}"
          REMOTE_REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

          echo "Publishing to ${GITHUB_REPOSITORY} on branch ${REMOTE_BRANCH}"
          rm -rf _site/
          git clone --depth=1 --branch="${REMOTE_BRANCH}" --single-branch --no-checkout \
            "${REMOTE_REPO}" _site/
      - name: Build site
        run: bundle exec jekyll build --destination _site --verbose --trace
        env:
          # For jekyll-github-metadata
          JEKYLL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
